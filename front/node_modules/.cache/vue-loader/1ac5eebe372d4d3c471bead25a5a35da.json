{"remainingRequest":"D:\\Biyesheji\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Biyesheji\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Biyesheji\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Biyesheji\\front\\src\\pages\\qichexinxi\\add.vue?vue&type=template&id=32fb3f5c&scoped=true&","dependencies":[{"path":"D:\\Biyesheji\\front\\src\\pages\\qichexinxi\\add.vue","mtime":1678271628000},{"path":"D:\\Biyesheji\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Biyesheji\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Biyesheji\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Biyesheji\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}