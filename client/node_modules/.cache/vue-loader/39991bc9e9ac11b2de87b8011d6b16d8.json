{"remainingRequest":"D:\\Biyesheji\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Biyesheji\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Biyesheji\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Biyesheji\\client\\src\\components\\index\\IndexAsideStatic.vue?vue&type=template&id=0175fa3e&scoped=true&","dependencies":[{"path":"D:\\Biyesheji\\client\\src\\components\\index\\IndexAsideStatic.vue","mtime":1714415055172},{"path":"D:\\Biyesheji\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Biyesheji\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Biyesheji\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Biyesheji\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}